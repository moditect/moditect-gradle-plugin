plugins {
    id 'java-gradle-plugin'
    id 'groovy'
    id "com.gradle.plugin-publish" version "0.10.0"
    id "com.github.hierynomus.license" version "0.14.0"
}

group = 'org.moditect'
version = '1.0.0-SNAPSHOT'

repositories {
    mavenCentral()
    jcenter()
    gradlePluginPortal()
    flatDir {
        dirs "${rootProject.projectDir}/lib"
    }
}

sourceCompatibility = 1.8

def defaultEncoding = 'UTF-8'
[compileJava, compileTestJava]*.options*.encoding = defaultEncoding

[compileGroovy, compileTestGroovy]*.options*.encoding = defaultEncoding
[compileGroovy, compileTestGroovy]*.groovyOptions*.encoding = defaultEncoding

sourceSets.main.java.srcDirs = []
sourceSets.main.groovy.srcDirs = ["src/main/java", "src/main/groovy"]

configurations {
    compile {transitive = true}
}

ext {
    aetherVersion = '1.1.0'
}

dependencies {
    implementation gradleTestKit()
    implementation localGroovy()

    implementation "gradle.plugin.com.google.gradle:osdetector-gradle-plugin:1.6.1"

    // TODO - use the artifact from Maven Central when it becomes available
    implementation 'com.github.moditect:moditect:1.0.0.Local'
    implementation 'com.github.javaparser:javaparser-core:3.5.0'
    // implementation 'com.github.moditect:moditect:1.0.0'

    implementation 'org.apache.maven:maven-aether-provider:3.3.9'
    implementation "org.eclipse.aether:aether-connector-basic:$aetherVersion"
    implementation "org.eclipse.aether:aether-transport-file:$aetherVersion"
    implementation "org.eclipse.aether:aether-transport-http:$aetherVersion"

    testImplementation('org.spockframework:spock-core:1.1-groovy-2.4') {
        exclude module: 'groovy-all'
    }
    testImplementation 'cglib:cglib-nodep:3.2.10'
    testImplementation 'org.objenesis:objenesis:3.0.1'
    testImplementation('com.athaydes:spock-reports:1.6.1') { transitive = false}
}

gradlePlugin {
    plugins {
        moditect {
            id = 'org.moditect.gradleplugin'
            implementationClass = 'org.moditect.gradleplugin.ModitectPlugin'
        }
    }
}
pluginBundle {
    website = 'https://github.com/moditect/moditect-gradle-plugin/'
    vcsUrl = 'https://github.com/moditect/moditect-gradle-plugin'
    description = 'A Gradle plugin for ModiTect'
    tags = ['moditect', 'java9', 'modules', 'jigsaw']

    plugins {
        moditect {
            id = 'org.moditect.gradleplugin'
            displayName = 'ModiTect Gradle Plugin'
        }
    }
}

jar {
    manifest {
        attributes 'Implementation-Title': "${project.archivesBaseName}",
                'Implementation-Version': archiveVersion
    }
}

license {
    header rootProject.file("license-header.txt")
    skipExistingHeaders true
    ignoreFailures false

    excludes(['**/*.properties'])
}
